Created by Osareme Davis

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDpSPjYXlGEgCwVFEJrQ/1vGlW6nnda1rDvOEm5MJudp1ABz7zfy8nu7jv2bycmaSyzEe964hoPR9ggyXKvTbF3slSeVc20QOgVPrrTl+scp8OLXUhgzPROuQ+StqX+5ZBgpbMgouMclywEyCY5oQOpMRbSpJ+Sdo1A4yVkxREpsiVJ+1mexYx5BnrIijuyRPMeBrgg3c2Bs/xE1n/uilbTahjqyQXD3VjhF24HMF13cpThFbrVvo+qj7xY87Eo09GdHCa4uy/849kcpWjFufearMgi4olzis6wG0C9Cfu6S8mq/w7ijLBWyj/QPf+p4+sBNZUYoruJDYBrp7EJ+GnMeSKMayxppK4bMuwo6jP+4nLoyL1d5BeAU/2CFdevMGUd4uXhaqtLomTnCzK3uXApOqxvVBN9dr3BpeW4rt/Sg0aMhPvh8Gi75e6uka8RmSFzM/IhVsgkkgdOmfw0IBLPKKgGdo2YmPvhI92p5zsorj6aqiMz47dNC34bBFCQFc= kali@kali

-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----

/////////////////////////Private Key////////////////////////////
3. The private key should be a sequence of integers: the modulus
n, the public exponent e, private exponent d, two prime numbers 
p and q, d mod (p-1) and d mod (q-1), coefficient (inverse of q)
mod p, and optionally additional prime numbers. I do not expect
this particular key to have additional prime numbers, so the 
file should not include the optional values.

4. I copy-pasted the contents of the file into the holtstrom 
decoder. I removed the begin/end lines before running the decoder

5. 
0x00 	
version: which version of RSA this key uses (0 indicates the 2 prime version, whereas 1 would indicate the multi prime).
0x00c3a523e36179461200b0545109ad0ff5bc6956ea79dd6b5ac3bce126e4c26e769d40073ef37f2f27bbb8efd9bc9c99a4b2cc47bdeb88683d1f608325cabd36c5dec952795736d103a054faeb4e5fac729f0e2d75218333d13ae43e4ada97fb96418296cc828b8c725cb0132098e6840ea4c45b4a927e49da35038c95931444a6c89527ed667b1631e419eb2228eec913cc781ae083773606cff11359ffba295b4da863ab24170f7563845db81cc175ddca538456eb56fa3eaa3ef163cec4a34f4674709ae2ecbff38f647295a316e7de6ab3208b8a25ce2b3ac06d02f427eee92f26abfc3b8a32c15b28ff40f7fea78fac04d654628aee243601ae9ec427e1a731e48a31acb1a692b86ccbb0a3a8cffb89cba322f577905e014ff608575ebcc194778b9785aaad2e89939c2ccadee5c0a4eab1bd504df5daf7069796e2bb7f4a0d1a3213ef87c1a2ef97baba46bc466485cccfc8855b2092481d3a67f0d0804b3ca2a019da366263ef848f76a79ceca2b8fa6aa88ccf8edd342df86c11424057
modulus: the n value that the key pair is using.
0x010001
publicExponent: the exponent from the public key used to encrypt data.
0x583b1be5b9fa3ab6f8b78cb6e531b68e6073731e9869da35db2b4db0c01ecd3951ee63b62892d57dca437b6b8b0b66a0e77f87e52718e3c598e66a0ebb913c67dcf296eea0fdd8221606ed07fc56da4af0df3071eff49f043f565a9f6058853dfc7a3baeac3ae9d25369969eaf45da0d4e923d0772ec603af7888bb892d563a681b3fe872a1ddd630f96febaef91cc7dd0cae37817e1c5ac29cff325b5d5cb3be1584ce68c0698529cd83f79be0223392c3b20e62009201eeda12834963588ddf821e70b051032036e408090579549f983ae3239ece79056ffb3906a325ef28dfa9287cc07d69bdfa5c322cbe88535acbccf3cf3c351086adea248b100710bf3b8ab542b70550ceb91ec1002dd9d27791372ab5751ab465dcbf700a541f35b7b90493e9bf4c2a5ebcbe42ea5db26070bb7296413477e9055dc59304c94ffef2c167c7fd809035b1dc212342fa41fb313ba243ace8a1962cc05687954b209093f3b5217339252817abac4b8c1a8d090af212d7abf349cb5f11910daa1111b8c9d
privateExponent: the exponent from the private key used to decrypt data.
0x00e55632f7fd1430989807a8eeb7aefc953e3bd0020579622b2ae2ab32243c89d6aa551b9102623415ebd10155f5e48ddeb46493bc446fb7669b333ac749218d961f8bd7853a0f9e7bc7c321f80bd3c826344807d812721f6df6061d3dda58857609ba2efeb64a34582b2f245876b259c60ad44fe3ab7729e3215add18029e374627725982a83912e2a210c681e2d76ab43b1d24b117a16c29e036e9e9fabfba24aa4c472e3013fa4c6887e7df343c44921a38418a33d7850b21ca8b2b521a75fb
prime1: one of the chosen prime integers to construct n (this one is p).
0x00da642b538340ab136f9646dcb62a74933422582be034b08259b82c501f8ed87364e8b00655d574b6889feaf97bc343f29c220c75714ec88c3725f5633484af8da25438a430597f203b291eba553fed87b9e57a05ed44670cbcc258d7c52ccccbd3df30d61f71c5aab848906d9ff39ee0672378e7f3cf1153bbbefa4ffcbb7e6fb1cd42f3281ac8fc8463f8bae25e65a05a35529b1bc4f2ceac240385e10dfca2745fb052f6a5875872ddc570d4ff39c868b44faedb1162e2c8d226cb9522fc55
prime2: the other chosen prime integer to construct n (q).

/////////////////Public Key//////////////////////////////////
7. The public key should only contain a sequence of two integers: the same modulus n, and the public exponent e.

I followed the directions for choice #1 to convert the file into the .pem format. I then used the holtstrom decoder once more.

0x00c3a523e36179461200b0545109ad0ff5bc6956ea79dd6b5ac3bce126e4c26e769d40073ef37f2f27bbb8efd9bc9c99a4b2cc47bdeb88683d1f608325cabd36c5dec952795736d103a054faeb4e5fac729f0e2d75218333d13ae43e4ada97fb96418296cc828b8c725cb0132098e6840ea4c45b4a927e49da35038c95931444a6c89527ed667b1631e419eb2228eec913cc781ae083773606cff11359ffba295b4da863ab24170f7563845db81cc175ddca538456eb56fa3eaa3ef163cec4a34f4674709ae2ecbff38f647295a316e7de6ab3208b8a25ce2b3ac06d02f427eee92f26abfc3b8a32c15b28ff40f7fea78fac04d654628aee243601ae9ec427e1a731e48a31acb1a692b86ccbb0a3a8cffb89cba322f577905e014ff608575ebcc194778b9785aaad2e89939c2ccadee5c0a4eab1bd504df5daf7069796e2bb7f4a0d1a3213ef87c1a2ef97baba46bc466485cccfc8855b2092481d3a67f0d0804b3ca2a019da366263ef848f76a79ceca2b8fa6aa88ccf8edd342df86c11424057
modulus: this should be the same n as in the private key.
0x010001
publicExponent: this should be the same e as in the private key.

////////////////////////Sanity check//////////////////////////
Please refer to key-formats.py for various calculations testing the relationships of the key values.
